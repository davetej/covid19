from airflow.models import DagTag, DagModel
from airflow.settings import Session
from airflow import settings
from airflow.security import permissions

# Specify the role name to grant permissions
role_name = 'Admin'

# Create a session to interact with the database
session = Session()

try:
    # Query DagTag to get DAG IDs with the 'ADMIN' tag
    dag_tags = session.query(DagTag.dag_id)\
                      .filter(DagTag.name == 'ADMIN')\
                      .distinct()\
                      .all()

    # Fetch or create the role
    role = settings.ROLES_MAPPING[role_name]

    if not role:
        raise ValueError(f"Role '{role_name}' not found in Airflow's settings. Please make sure the role exists.")

    # Grant permissions for view and edit for each DAG
    for dag_id in dag_tags:
        dag_id = dag_id[0]  # Extract DAG ID from the query result tuple
        dag_model = session.query(DagModel).filter(DagModel.dag_id == dag_id).first()

        if dag_model:
            # Add view and edit permissions to the role for the DAG
            role.add_permission_view(dag_model)
            role.add_permission_edit(dag_model)
            print(f"Permissions added for DAG '{dag_id}' to role '{role_name}'.")
        else:
            print(f"DAG '{dag_id}' not found.")

    # Commit changes
    session.commit()

finally:
    # Close the session
    session.close()
