from airflow.plugins_manager import AirflowPlugin
from airflow.www.security import AirflowSecurityManager
from flask_appbuilder.security.decorators import has_access
from flask import g
from airflow.www.app import cached_app

class CustomSecurityManager(AirflowSecurityManager):

    def has_access(self, permission, view_name, role=None):
        user = g.user
        
        # Check if user is authenticated
        if user.is_anonymous:
            return False

        # Example: Check if user has a specific role to hide all DAGs
        if role and role.name == 'RestrictedRole':
            return False

        return super().has_access(permission, view_name, role)

class CustomSecurityPlugin(AirflowPlugin):
    name = "custom_security_plugin"
    
    def __init__(self):
        app = cached_app(None)
        security_manager = CustomSecurityManager(appbuilder=app.appbuilder)
        app.appbuilder.sm = security_manager
